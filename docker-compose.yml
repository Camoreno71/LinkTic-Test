version: "3.8"

services:
  products-service:
    build: ./products-service
    container_name: products-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://products-db:3306/products_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      API_KEY: my-secret-api-key
    depends_on:
      products-db:
        condition: service_healthy
    networks:
      - store-network

  products-db:
    image: mysql:8.0
    container_name: products-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: products_db
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - store-network

  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://inventory-db:3306/inventory_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      PRODUCTS_SERVICE_URL: http://products-service:8080
      API_KEY: my-secret-api-key
    depends_on:
      products-service:
        condition: service_started
      inventory-db:
        condition: service_healthy
    networks:
      - store-network

  inventory-db:
    image: mysql:8.0
    container_name: inventory-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventory_db
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - store-network

networks:
  store-network:
    driver: bridge
